/**
 * generated by Xtext 2.24.0
 */
package com.karalisoft.scad;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see com.karalisoft.scad.ScadPackage
 * @generated
 */
public interface ScadFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ScadFactory eINSTANCE = com.karalisoft.scad.impl.ScadFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Module Or Function</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Module Or Function</em>'.
   * @generated
   */
  ModuleOrFunction createModuleOrFunction();

  /**
   * Returns a new object of class '<em>Use Or Include</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Use Or Include</em>'.
   * @generated
   */
  UseOrInclude createUseOrInclude();

  /**
   * Returns a new object of class '<em>Module</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Module</em>'.
   * @generated
   */
  Module createModule();

  /**
   * Returns a new object of class '<em>Function</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Function</em>'.
   * @generated
   */
  Function createFunction();

  /**
   * Returns a new object of class '<em>Module Or Function Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Module Or Function Call</em>'.
   * @generated
   */
  ModuleOrFunctionCall createModuleOrFunctionCall();

  /**
   * Returns a new object of class '<em>Transformation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Transformation</em>'.
   * @generated
   */
  Transformation createTransformation();

  /**
   * Returns a new object of class '<em>Translate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Translate</em>'.
   * @generated
   */
  Translate createTranslate();

  /**
   * Returns a new object of class '<em>Rotate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Rotate</em>'.
   * @generated
   */
  Rotate createRotate();

  /**
   * Returns a new object of class '<em>Scale</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Scale</em>'.
   * @generated
   */
  Scale createScale();

  /**
   * Returns a new object of class '<em>Shape</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Shape</em>'.
   * @generated
   */
  Shape createShape();

  /**
   * Returns a new object of class '<em>Transformed Shape</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Transformed Shape</em>'.
   * @generated
   */
  TransformedShape createTransformedShape();

  /**
   * Returns a new object of class '<em>Transformed Module Or Function Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Transformed Module Or Function Call</em>'.
   * @generated
   */
  TransformedModuleOrFunctionCall createTransformedModuleOrFunctionCall();

  /**
   * Returns a new object of class '<em>Sphere</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sphere</em>'.
   * @generated
   */
  Sphere createSphere();

  /**
   * Returns a new object of class '<em>Sphere Params</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sphere Params</em>'.
   * @generated
   */
  SphereParams createSphereParams();

  /**
   * Returns a new object of class '<em>Cylinder</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cylinder</em>'.
   * @generated
   */
  Cylinder createCylinder();

  /**
   * Returns a new object of class '<em>Cylinder Params</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cylinder Params</em>'.
   * @generated
   */
  CylinderParams createCylinderParams();

  /**
   * Returns a new object of class '<em>Cube</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cube</em>'.
   * @generated
   */
  Cube createCube();

  /**
   * Returns a new object of class '<em>Cube Params</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cube Params</em>'.
   * @generated
   */
  CubeParams createCubeParams();

  /**
   * Returns a new object of class '<em>Union</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Union</em>'.
   * @generated
   */
  Union createUnion();

  /**
   * Returns a new object of class '<em>Intersection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Intersection</em>'.
   * @generated
   */
  Intersection createIntersection();

  /**
   * Returns a new object of class '<em>Difference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Difference</em>'.
   * @generated
   */
  Difference createDifference();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ScadPackage getScadPackage();

} //ScadFactory
