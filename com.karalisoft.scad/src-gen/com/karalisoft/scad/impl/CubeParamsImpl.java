/**
 * generated by Xtext 2.24.0
 */
package com.karalisoft.scad.impl;

import com.karalisoft.scad.CubeParams;
import com.karalisoft.scad.ScadPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cube Params</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.karalisoft.scad.impl.CubeParamsImpl#getSize <em>Size</em>}</li>
 *   <li>{@link com.karalisoft.scad.impl.CubeParamsImpl#getX <em>X</em>}</li>
 *   <li>{@link com.karalisoft.scad.impl.CubeParamsImpl#getY <em>Y</em>}</li>
 *   <li>{@link com.karalisoft.scad.impl.CubeParamsImpl#getZ <em>Z</em>}</li>
 *   <li>{@link com.karalisoft.scad.impl.CubeParamsImpl#getCenter <em>Center</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CubeParamsImpl extends MinimalEObjectImpl.Container implements CubeParams
{
  /**
   * The default value of the '{@link #getSize() <em>Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSize()
   * @generated
   * @ordered
   */
  protected static final Double SIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSize() <em>Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSize()
   * @generated
   * @ordered
   */
  protected Double size = SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected static final Double X_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected Double x = X_EDEFAULT;

  /**
   * The default value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected static final Double Y_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected Double y = Y_EDEFAULT;

  /**
   * The default value of the '{@link #getZ() <em>Z</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZ()
   * @generated
   * @ordered
   */
  protected static final Double Z_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getZ() <em>Z</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZ()
   * @generated
   * @ordered
   */
  protected Double z = Z_EDEFAULT;

  /**
   * The default value of the '{@link #getCenter() <em>Center</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCenter()
   * @generated
   * @ordered
   */
  protected static final String CENTER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCenter() <em>Center</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCenter()
   * @generated
   * @ordered
   */
  protected String center = CENTER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CubeParamsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ScadPackage.Literals.CUBE_PARAMS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Double getSize()
  {
    return size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSize(Double newSize)
  {
    Double oldSize = size;
    size = newSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScadPackage.CUBE_PARAMS__SIZE, oldSize, size));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Double getX()
  {
    return x;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setX(Double newX)
  {
    Double oldX = x;
    x = newX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScadPackage.CUBE_PARAMS__X, oldX, x));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Double getY()
  {
    return y;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setY(Double newY)
  {
    Double oldY = y;
    y = newY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScadPackage.CUBE_PARAMS__Y, oldY, y));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Double getZ()
  {
    return z;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setZ(Double newZ)
  {
    Double oldZ = z;
    z = newZ;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScadPackage.CUBE_PARAMS__Z, oldZ, z));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCenter()
  {
    return center;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCenter(String newCenter)
  {
    String oldCenter = center;
    center = newCenter;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ScadPackage.CUBE_PARAMS__CENTER, oldCenter, center));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ScadPackage.CUBE_PARAMS__SIZE:
        return getSize();
      case ScadPackage.CUBE_PARAMS__X:
        return getX();
      case ScadPackage.CUBE_PARAMS__Y:
        return getY();
      case ScadPackage.CUBE_PARAMS__Z:
        return getZ();
      case ScadPackage.CUBE_PARAMS__CENTER:
        return getCenter();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ScadPackage.CUBE_PARAMS__SIZE:
        setSize((Double)newValue);
        return;
      case ScadPackage.CUBE_PARAMS__X:
        setX((Double)newValue);
        return;
      case ScadPackage.CUBE_PARAMS__Y:
        setY((Double)newValue);
        return;
      case ScadPackage.CUBE_PARAMS__Z:
        setZ((Double)newValue);
        return;
      case ScadPackage.CUBE_PARAMS__CENTER:
        setCenter((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ScadPackage.CUBE_PARAMS__SIZE:
        setSize(SIZE_EDEFAULT);
        return;
      case ScadPackage.CUBE_PARAMS__X:
        setX(X_EDEFAULT);
        return;
      case ScadPackage.CUBE_PARAMS__Y:
        setY(Y_EDEFAULT);
        return;
      case ScadPackage.CUBE_PARAMS__Z:
        setZ(Z_EDEFAULT);
        return;
      case ScadPackage.CUBE_PARAMS__CENTER:
        setCenter(CENTER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ScadPackage.CUBE_PARAMS__SIZE:
        return SIZE_EDEFAULT == null ? size != null : !SIZE_EDEFAULT.equals(size);
      case ScadPackage.CUBE_PARAMS__X:
        return X_EDEFAULT == null ? x != null : !X_EDEFAULT.equals(x);
      case ScadPackage.CUBE_PARAMS__Y:
        return Y_EDEFAULT == null ? y != null : !Y_EDEFAULT.equals(y);
      case ScadPackage.CUBE_PARAMS__Z:
        return Z_EDEFAULT == null ? z != null : !Z_EDEFAULT.equals(z);
      case ScadPackage.CUBE_PARAMS__CENTER:
        return CENTER_EDEFAULT == null ? center != null : !CENTER_EDEFAULT.equals(center);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (size: ");
    result.append(size);
    result.append(", x: ");
    result.append(x);
    result.append(", y: ");
    result.append(y);
    result.append(", z: ");
    result.append(z);
    result.append(", center: ");
    result.append(center);
    result.append(')');
    return result.toString();
  }

} //CubeParamsImpl
