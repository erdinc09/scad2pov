/*
 * generated by Xtext 2.24.0
 */
grammar InternalScad;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.karalisoft.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.karalisoft.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.karalisoft.services.ScadGrammarAccess;

}

@parser::members {

 	private ScadGrammarAccess grammarAccess;

    public InternalScadParser(TokenStream input, ScadGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ScadGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getBlocksShapeParserRuleCall_0_0());
				}
				lv_blocks_0_1=ruleShape
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_0_1,
						"com.karalisoft.Scad.Shape");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getModelAccess().getBlocksModuleParserRuleCall_0_1());
				}
				lv_blocks_0_2=ruleModule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_0_2,
						"com.karalisoft.Scad.Module");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getModelAccess().getBlocksFunctionParserRuleCall_0_2());
				}
				lv_blocks_0_3=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_0_3,
						"com.karalisoft.Scad.Function");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getModelAccess().getBlocksModuleOrFunctionCallParserRuleCall_0_3());
				}
				lv_blocks_0_4=ruleModuleOrFunctionCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_0_4,
						"com.karalisoft.Scad.ModuleOrFunctionCall");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getModelAccess().getBlocksUseOrIncludeParserRuleCall_0_4());
				}
				lv_blocks_0_5=ruleUseOrInclude
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_0_5,
						"com.karalisoft.Scad.UseOrInclude");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRuleUseOrInclude
entryRuleUseOrInclude returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseOrIncludeRule()); }
	iv_ruleUseOrInclude=ruleUseOrInclude
	{ $current=$iv_ruleUseOrInclude.current; }
	EOF;

// Rule UseOrInclude
ruleUseOrInclude returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUseOrIncludeAccess().getUseOrIncludeAction_0(),
					$current);
			}
		)
		(
			otherlv_1='use'
			{
				newLeafNode(otherlv_1, grammarAccess.getUseOrIncludeAccess().getUseKeyword_1_0());
			}
			    |
			otherlv_2='include'
			{
				newLeafNode(otherlv_2, grammarAccess.getUseOrIncludeAccess().getIncludeKeyword_1_1());
			}
		)
		otherlv_3='<'
		{
			newLeafNode(otherlv_3, grammarAccess.getUseOrIncludeAccess().getLessThanSignKeyword_2());
		}
		this_ID_4=RULE_ID
		{
			newLeafNode(this_ID_4, grammarAccess.getUseOrIncludeAccess().getIDTerminalRuleCall_3());
		}
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getUseOrIncludeAccess().getFullStopKeyword_4());
		}
		this_ID_6=RULE_ID
		{
			newLeafNode(this_ID_6, grammarAccess.getUseOrIncludeAccess().getIDTerminalRuleCall_5());
		}
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getUseOrIncludeAccess().getGreaterThanSignKeyword_6());
		}
		(
			(';')=>
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getUseOrIncludeAccess().getSemicolonKeyword_7());
			}
		)*
	)
;

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModuleAccess().getModuleAction_0(),
					$current);
			}
		)
		otherlv_1='module'
		{
			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModuleAccess().getBlocksModuleParserRuleCall_5_1_0_0());
						}
						lv_blocks_6_1=ruleModule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleRule());
							}
							add(
								$current,
								"blocks",
								lv_blocks_6_1,
								"com.karalisoft.Scad.Module");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getModuleAccess().getBlocksShapeParserRuleCall_5_1_0_1());
						}
						lv_blocks_6_2=ruleShape
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleRule());
							}
							add(
								$current,
								"blocks",
								lv_blocks_6_2,
								"com.karalisoft.Scad.Shape");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getModuleAccess().getBlocksFunctionParserRuleCall_5_1_0_2());
						}
						lv_blocks_6_3=ruleFunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleRule());
							}
							add(
								$current,
								"blocks",
								lv_blocks_6_3,
								"com.karalisoft.Scad.Function");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getModuleAccess().getBlocksModuleOrFunctionCallParserRuleCall_5_1_0_3());
						}
						lv_blocks_6_4=ruleModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleRule());
							}
							add(
								$current,
								"blocks",
								lv_blocks_6_4,
								"com.karalisoft.Scad.ModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getModuleAccess().getBlocksTransformedModuleOrFunctionCallParserRuleCall_5_1_0_4());
						}
						lv_blocks_6_5=ruleTransformedModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleRule());
							}
							add(
								$current,
								"blocks",
								lv_blocks_6_5,
								"com.karalisoft.Scad.TransformedModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5_2());
			}
		)
		(
			(';')=>
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getModuleAccess().getSemicolonKeyword_6());
			}
		)*
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		otherlv_1='function'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
		(
			(';')=>
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getSemicolonKeyword_5());
			}
		)*
	)
;

// Entry rule entryRuleModuleOrFunctionCall
entryRuleModuleOrFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleOrFunctionCallRule()); }
	iv_ruleModuleOrFunctionCall=ruleModuleOrFunctionCall
	{ $current=$iv_ruleModuleOrFunctionCall.current; }
	EOF;

// Rule ModuleOrFunctionCall
ruleModuleOrFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getModuleOrFunctionCallAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleOrFunctionCallRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getModuleOrFunctionCallAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getModuleOrFunctionCallAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getModuleOrFunctionCallAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleTranslate
entryRuleTranslate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTranslateRule()); }
	iv_ruleTranslate=ruleTranslate
	{ $current=$iv_ruleTranslate.current; }
	EOF;

// Rule Translate
ruleTranslate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTranslateAccess().getTranslateAction_0(),
					$current);
			}
		)
		(
			otherlv_1='translate'
			{
				newLeafNode(otherlv_1, grammarAccess.getTranslateAccess().getTranslateKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getTranslateAccess().getLeftParenthesisKeyword_1_1());
			}
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getTranslateAccess().getLeftSquareBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTranslateAccess().getXDoubleParserRuleCall_1_3_0());
					}
					lv_x_4_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTranslateRule());
						}
						set(
							$current,
							"x",
							lv_x_4_0,
							"com.karalisoft.Scad.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getTranslateAccess().getCommaKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTranslateAccess().getYDoubleParserRuleCall_1_5_0());
					}
					lv_y_6_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTranslateRule());
						}
						set(
							$current,
							"y",
							lv_y_6_0,
							"com.karalisoft.Scad.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getTranslateAccess().getCommaKeyword_1_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTranslateAccess().getZDoubleParserRuleCall_1_7_0());
					}
					lv_z_8_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTranslateRule());
						}
						set(
							$current,
							"z",
							lv_z_8_0,
							"com.karalisoft.Scad.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=']'
			{
				newLeafNode(otherlv_9, grammarAccess.getTranslateAccess().getRightSquareBracketKeyword_1_8());
			}
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getTranslateAccess().getRightParenthesisKeyword_1_9());
			}
		)
	)
;

// Entry rule entryRuleRotate
entryRuleRotate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotateRule()); }
	iv_ruleRotate=ruleRotate
	{ $current=$iv_ruleRotate.current; }
	EOF;

// Rule Rotate
ruleRotate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRotateAccess().getRotateAction_0(),
					$current);
			}
		)
		(
			otherlv_1='rotate'
			{
				newLeafNode(otherlv_1, grammarAccess.getRotateAccess().getRotateKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getRotateAccess().getLeftParenthesisKeyword_1_1());
			}
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getRotateAccess().getLeftSquareBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRotateAccess().getXDoubleParserRuleCall_1_3_0());
					}
					lv_x_4_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRotateRule());
						}
						set(
							$current,
							"x",
							lv_x_4_0,
							"com.karalisoft.Scad.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getRotateAccess().getCommaKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRotateAccess().getYDoubleParserRuleCall_1_5_0());
					}
					lv_y_6_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRotateRule());
						}
						set(
							$current,
							"y",
							lv_y_6_0,
							"com.karalisoft.Scad.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getRotateAccess().getCommaKeyword_1_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRotateAccess().getZDoubleParserRuleCall_1_7_0());
					}
					lv_z_8_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRotateRule());
						}
						set(
							$current,
							"z",
							lv_z_8_0,
							"com.karalisoft.Scad.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=']'
			{
				newLeafNode(otherlv_9, grammarAccess.getRotateAccess().getRightSquareBracketKeyword_1_8());
			}
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getRotateAccess().getRightParenthesisKeyword_1_9());
			}
		)
	)
;

// Entry rule entryRuleScale
entryRuleScale returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScaleRule()); }
	iv_ruleScale=ruleScale
	{ $current=$iv_ruleScale.current; }
	EOF;

// Rule Scale
ruleScale returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getScaleAccess().getScaleAction_0(),
					$current);
			}
		)
		(
			otherlv_1='scale'
			{
				newLeafNode(otherlv_1, grammarAccess.getScaleAccess().getScaleKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getScaleAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					otherlv_3='['
					{
						newLeafNode(otherlv_3, grammarAccess.getScaleAccess().getLeftSquareBracketKeyword_1_2_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getScaleAccess().getXDoubleParserRuleCall_1_2_0_1_0());
							}
							lv_x_4_0=ruleDouble
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getScaleRule());
								}
								set(
									$current,
									"x",
									lv_x_4_0,
									"com.karalisoft.Scad.Double");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getScaleAccess().getCommaKeyword_1_2_0_2());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getScaleAccess().getYDoubleParserRuleCall_1_2_0_3_0());
							}
							lv_y_6_0=ruleDouble
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getScaleRule());
								}
								set(
									$current,
									"y",
									lv_y_6_0,
									"com.karalisoft.Scad.Double");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getScaleAccess().getCommaKeyword_1_2_0_4());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getScaleAccess().getZDoubleParserRuleCall_1_2_0_5_0());
							}
							lv_z_8_0=ruleDouble
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getScaleRule());
								}
								set(
									$current,
									"z",
									lv_z_8_0,
									"com.karalisoft.Scad.Double");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_9=']'
					{
						newLeafNode(otherlv_9, grammarAccess.getScaleAccess().getRightSquareBracketKeyword_1_2_0_6());
					}
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getScaleAccess().getScaleDoubleParserRuleCall_1_2_1_0());
						}
						lv_scale_10_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScaleRule());
							}
							set(
								$current,
								"scale",
								lv_scale_10_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getScaleAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleShape
entryRuleShape returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShapeRule()); }
	iv_ruleShape=ruleShape
	{ $current=$iv_ruleShape.current; }
	EOF;

// Rule Shape
ruleShape returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getShapeAccess().getShapeAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getShapeAccess().getImplTransformedShapeParserRuleCall_1_0_0());
					}
					lv_impl_1_1=ruleTransformedShape
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShapeRule());
						}
						set(
							$current,
							"impl",
							lv_impl_1_1,
							"com.karalisoft.Scad.TransformedShape");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getShapeAccess().getImplUnionParserRuleCall_1_0_1());
					}
					lv_impl_1_2=ruleUnion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShapeRule());
						}
						set(
							$current,
							"impl",
							lv_impl_1_2,
							"com.karalisoft.Scad.Union");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getShapeAccess().getImplIntersectionParserRuleCall_1_0_2());
					}
					lv_impl_1_3=ruleIntersection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShapeRule());
						}
						set(
							$current,
							"impl",
							lv_impl_1_3,
							"com.karalisoft.Scad.Intersection");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getShapeAccess().getImplDifferenceParserRuleCall_1_0_3());
					}
					lv_impl_1_4=ruleDifference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShapeRule());
						}
						set(
							$current,
							"impl",
							lv_impl_1_4,
							"com.karalisoft.Scad.Difference");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getShapeAccess().getImplSphereParserRuleCall_1_0_4());
					}
					lv_impl_1_5=ruleSphere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShapeRule());
						}
						set(
							$current,
							"impl",
							lv_impl_1_5,
							"com.karalisoft.Scad.Sphere");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getShapeAccess().getImplCylinderParserRuleCall_1_0_5());
					}
					lv_impl_1_6=ruleCylinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShapeRule());
						}
						set(
							$current,
							"impl",
							lv_impl_1_6,
							"com.karalisoft.Scad.Cylinder");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getShapeAccess().getImplCubeParserRuleCall_1_0_6());
					}
					lv_impl_1_7=ruleCube
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShapeRule());
						}
						set(
							$current,
							"impl",
							lv_impl_1_7,
							"com.karalisoft.Scad.Cube");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTransformedShape
entryRuleTransformedShape returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformedShapeRule()); }
	iv_ruleTransformedShape=ruleTransformedShape
	{ $current=$iv_ruleTransformedShape.current; }
	EOF;

// Rule TransformedShape
ruleTransformedShape returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTransformedShapeAccess().getTransformedShapeAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformedShapeAccess().getTranslationsTranslateParserRuleCall_1_0_0());
					}
					lv_translations_1_1=ruleTranslate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformedShapeRule());
						}
						add(
							$current,
							"translations",
							lv_translations_1_1,
							"com.karalisoft.Scad.Translate");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTransformedShapeAccess().getTranslationsRotateParserRuleCall_1_0_1());
					}
					lv_translations_1_2=ruleRotate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformedShapeRule());
						}
						add(
							$current,
							"translations",
							lv_translations_1_2,
							"com.karalisoft.Scad.Rotate");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTransformedShapeAccess().getTranslationsScaleParserRuleCall_1_0_2());
					}
					lv_translations_1_3=ruleScale
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformedShapeRule());
						}
						add(
							$current,
							"translations",
							lv_translations_1_3,
							"com.karalisoft.Scad.Scale");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransformedShapeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformedShapeAccess().getImplShapeParserRuleCall_3_0());
				}
				lv_impl_3_0=ruleShape
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformedShapeRule());
					}
					add(
						$current,
						"impl",
						lv_impl_3_0,
						"com.karalisoft.Scad.Shape");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransformedShapeAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(';')=>
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getTransformedShapeAccess().getSemicolonKeyword_5());
			}
		)*
	)
;

// Entry rule entryRuleTransformedModuleOrFunctionCall
entryRuleTransformedModuleOrFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformedModuleOrFunctionCallRule()); }
	iv_ruleTransformedModuleOrFunctionCall=ruleTransformedModuleOrFunctionCall
	{ $current=$iv_ruleTransformedModuleOrFunctionCall.current; }
	EOF;

// Rule TransformedModuleOrFunctionCall
ruleTransformedModuleOrFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTransformedModuleOrFunctionCallAccess().getTransformedModuleOrFunctionCallAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformedModuleOrFunctionCallAccess().getTranslationsTranslateParserRuleCall_1_0_0());
					}
					lv_translations_1_1=ruleTranslate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformedModuleOrFunctionCallRule());
						}
						add(
							$current,
							"translations",
							lv_translations_1_1,
							"com.karalisoft.Scad.Translate");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTransformedModuleOrFunctionCallAccess().getTranslationsRotateParserRuleCall_1_0_1());
					}
					lv_translations_1_2=ruleRotate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformedModuleOrFunctionCallRule());
						}
						add(
							$current,
							"translations",
							lv_translations_1_2,
							"com.karalisoft.Scad.Rotate");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTransformedModuleOrFunctionCallAccess().getTranslationsScaleParserRuleCall_1_0_2());
					}
					lv_translations_1_3=ruleScale
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformedModuleOrFunctionCallRule());
						}
						add(
							$current,
							"translations",
							lv_translations_1_3,
							"com.karalisoft.Scad.Scale");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransformedModuleOrFunctionCallAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformedModuleOrFunctionCallAccess().getImplModuleOrFunctionCallParserRuleCall_3_0());
				}
				lv_impl_3_0=ruleModuleOrFunctionCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformedModuleOrFunctionCallRule());
					}
					add(
						$current,
						"impl",
						lv_impl_3_0,
						"com.karalisoft.Scad.ModuleOrFunctionCall");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransformedModuleOrFunctionCallAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(';')=>
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getTransformedModuleOrFunctionCallAccess().getSemicolonKeyword_5());
			}
		)*
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSphereAccess().getSphereAction_0(),
					$current);
			}
		)
		(
			otherlv_1='sphere'
			{
				newLeafNode(otherlv_1, grammarAccess.getSphereAccess().getSphereKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getSphereAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSphereAccess().getSphereParamsSphereParamsParserRuleCall_1_2_0_0());
						}
						lv_sphereParams_3_0=ruleSphereParams
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSphereRule());
							}
							add(
								$current,
								"sphereParams",
								lv_sphereParams_3_0,
								"com.karalisoft.Scad.SphereParams");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getSphereAccess().getCommaKeyword_1_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSphereAccess().getSphereParamsSphereParamsParserRuleCall_1_2_1_1_0());
							}
							lv_sphereParams_5_0=ruleSphereParams
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSphereRule());
								}
								add(
									$current,
									"sphereParams",
									lv_sphereParams_5_0,
									"com.karalisoft.Scad.SphereParams");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getSphereAccess().getRightParenthesisKeyword_1_3());
			}
			(
				(';')=>
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getSphereAccess().getSemicolonKeyword_1_4());
				}
			)+
		)
	)
;

// Entry rule entryRuleSphereParams
entryRuleSphereParams returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereParamsRule()); }
	iv_ruleSphereParams=ruleSphereParams
	{ $current=$iv_ruleSphereParams.current; }
	EOF;

// Rule SphereParams
ruleSphereParams returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSphereParamsAccess().getSphereParamsAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='$fn'
				{
					newLeafNode(otherlv_1, grammarAccess.getSphereParamsAccess().getFnKeyword_1_0_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getSphereParamsAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSphereParamsAccess().getFnDoubleParserRuleCall_1_0_2_0());
						}
						lv_fn_3_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSphereParamsRule());
							}
							set(
								$current,
								"fn",
								lv_fn_3_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='$fa'
				{
					newLeafNode(otherlv_4, grammarAccess.getSphereParamsAccess().getFaKeyword_1_1_0());
				}
				otherlv_5='='
				{
					newLeafNode(otherlv_5, grammarAccess.getSphereParamsAccess().getEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSphereParamsAccess().getFaDoubleParserRuleCall_1_1_2_0());
						}
						lv_fa_6_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSphereParamsRule());
							}
							set(
								$current,
								"fa",
								lv_fa_6_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='$fs'
				{
					newLeafNode(otherlv_7, grammarAccess.getSphereParamsAccess().getFsKeyword_1_2_0());
				}
				otherlv_8='='
				{
					newLeafNode(otherlv_8, grammarAccess.getSphereParamsAccess().getEqualsSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSphereParamsAccess().getFsDoubleParserRuleCall_1_2_2_0());
						}
						lv_fs_9_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSphereParamsRule());
							}
							set(
								$current,
								"fs",
								lv_fs_9_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_10='r'
				{
					newLeafNode(otherlv_10, grammarAccess.getSphereParamsAccess().getRKeyword_1_3_0());
				}
				otherlv_11='='
				{
					newLeafNode(otherlv_11, grammarAccess.getSphereParamsAccess().getEqualsSignKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSphereParamsAccess().getRDoubleParserRuleCall_1_3_2_0());
						}
						lv_r_12_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSphereParamsRule());
							}
							set(
								$current,
								"r",
								lv_r_12_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_13='d'
				{
					newLeafNode(otherlv_13, grammarAccess.getSphereParamsAccess().getDKeyword_1_4_0());
				}
				otherlv_14='='
				{
					newLeafNode(otherlv_14, grammarAccess.getSphereParamsAccess().getEqualsSignKeyword_1_4_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSphereParamsAccess().getDDoubleParserRuleCall_1_4_2_0());
						}
						lv_d_15_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSphereParamsRule());
							}
							set(
								$current,
								"d",
								lv_d_15_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCylinderAccess().getCylinderAction_0(),
					$current);
			}
		)
		(
			otherlv_1='cylinder'
			{
				newLeafNode(otherlv_1, grammarAccess.getCylinderAccess().getCylinderKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getCylinderAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderAccess().getCylinderParamsCylinderParamsParserRuleCall_1_2_0_0());
						}
						lv_cylinderParams_3_0=ruleCylinderParams
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderRule());
							}
							add(
								$current,
								"cylinderParams",
								lv_cylinderParams_3_0,
								"com.karalisoft.Scad.CylinderParams");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getCylinderAccess().getCommaKeyword_1_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCylinderAccess().getCylinderParamsCylinderParamsParserRuleCall_1_2_1_1_0());
							}
							lv_cylinderParams_5_0=ruleCylinderParams
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCylinderRule());
								}
								add(
									$current,
									"cylinderParams",
									lv_cylinderParams_5_0,
									"com.karalisoft.Scad.CylinderParams");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getCylinderAccess().getRightParenthesisKeyword_1_3());
			}
			(
				(';')=>
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getCylinderAccess().getSemicolonKeyword_1_4());
				}
			)+
		)
	)
;

// Entry rule entryRuleCylinderParams
entryRuleCylinderParams returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderParamsRule()); }
	iv_ruleCylinderParams=ruleCylinderParams
	{ $current=$iv_ruleCylinderParams.current; }
	EOF;

// Rule CylinderParams
ruleCylinderParams returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCylinderParamsAccess().getCylinderParamsAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='$fn'
				{
					newLeafNode(otherlv_1, grammarAccess.getCylinderParamsAccess().getFnKeyword_1_0_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getFnDoubleParserRuleCall_1_0_2_0());
						}
						lv_fn_3_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"fn",
								lv_fn_3_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='$fa'
				{
					newLeafNode(otherlv_4, grammarAccess.getCylinderParamsAccess().getFaKeyword_1_1_0());
				}
				otherlv_5='='
				{
					newLeafNode(otherlv_5, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getFaDoubleParserRuleCall_1_1_2_0());
						}
						lv_fa_6_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"fa",
								lv_fa_6_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='$fs'
				{
					newLeafNode(otherlv_7, grammarAccess.getCylinderParamsAccess().getFsKeyword_1_2_0());
				}
				otherlv_8='='
				{
					newLeafNode(otherlv_8, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getFsDoubleParserRuleCall_1_2_2_0());
						}
						lv_fs_9_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"fs",
								lv_fs_9_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_10='h'
				{
					newLeafNode(otherlv_10, grammarAccess.getCylinderParamsAccess().getHKeyword_1_3_0());
				}
				otherlv_11='='
				{
					newLeafNode(otherlv_11, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getHDoubleParserRuleCall_1_3_2_0());
						}
						lv_h_12_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"h",
								lv_h_12_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_13='r'
				{
					newLeafNode(otherlv_13, grammarAccess.getCylinderParamsAccess().getRKeyword_1_4_0());
				}
				otherlv_14='='
				{
					newLeafNode(otherlv_14, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_4_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getRDoubleParserRuleCall_1_4_2_0());
						}
						lv_r_15_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"r",
								lv_r_15_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_16='r1'
				{
					newLeafNode(otherlv_16, grammarAccess.getCylinderParamsAccess().getR1Keyword_1_5_0());
				}
				otherlv_17='='
				{
					newLeafNode(otherlv_17, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_5_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getR1DoubleParserRuleCall_1_5_2_0());
						}
						lv_r1_18_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"r1",
								lv_r1_18_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_19='r2'
				{
					newLeafNode(otherlv_19, grammarAccess.getCylinderParamsAccess().getR2Keyword_1_6_0());
				}
				otherlv_20='='
				{
					newLeafNode(otherlv_20, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_6_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getR2DoubleParserRuleCall_1_6_2_0());
						}
						lv_r2_21_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"r2",
								lv_r2_21_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_22='d'
				{
					newLeafNode(otherlv_22, grammarAccess.getCylinderParamsAccess().getDKeyword_1_7_0());
				}
				otherlv_23='='
				{
					newLeafNode(otherlv_23, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_7_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getDDoubleParserRuleCall_1_7_2_0());
						}
						lv_d_24_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"d",
								lv_d_24_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_25='d1'
				{
					newLeafNode(otherlv_25, grammarAccess.getCylinderParamsAccess().getD1Keyword_1_8_0());
				}
				otherlv_26='='
				{
					newLeafNode(otherlv_26, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_8_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getD1DoubleParserRuleCall_1_8_2_0());
						}
						lv_d1_27_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"d1",
								lv_d1_27_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_28='d2'
				{
					newLeafNode(otherlv_28, grammarAccess.getCylinderParamsAccess().getD2Keyword_1_9_0());
				}
				otherlv_29='='
				{
					newLeafNode(otherlv_29, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_9_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCylinderParamsAccess().getD2DoubleParserRuleCall_1_9_2_0());
						}
						lv_d2_30_0=ruleDouble
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCylinderParamsRule());
							}
							set(
								$current,
								"d2",
								lv_d2_30_0,
								"com.karalisoft.Scad.Double");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					otherlv_31='center'
					{
						newLeafNode(otherlv_31, grammarAccess.getCylinderParamsAccess().getCenterKeyword_1_10_0_0());
					}
					otherlv_32='='
					{
						newLeafNode(otherlv_32, grammarAccess.getCylinderParamsAccess().getEqualsSignKeyword_1_10_0_1());
					}
				)?
				(
					(
						(
							lv_center_33_1='true'
							{
								newLeafNode(lv_center_33_1, grammarAccess.getCylinderParamsAccess().getCenterTrueKeyword_1_10_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getCylinderParamsRule());
								}
								setWithLastConsumed($current, "center", lv_center_33_1, null);
							}
							    |
							lv_center_33_2='false'
							{
								newLeafNode(lv_center_33_2, grammarAccess.getCylinderParamsAccess().getCenterFalseKeyword_1_10_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getCylinderParamsRule());
								}
								setWithLastConsumed($current, "center", lv_center_33_2, null);
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleCube
entryRuleCube returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCubeRule()); }
	iv_ruleCube=ruleCube
	{ $current=$iv_ruleCube.current; }
	EOF;

// Rule Cube
ruleCube returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCubeAccess().getCubeAction_0(),
					$current);
			}
		)
		(
			otherlv_1='cube'
			{
				newLeafNode(otherlv_1, grammarAccess.getCubeAccess().getCubeKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getCubeAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCubeAccess().getCubeParamsCubeParamsParserRuleCall_1_2_0_0());
						}
						lv_cubeParams_3_0=ruleCubeParams
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCubeRule());
							}
							add(
								$current,
								"cubeParams",
								lv_cubeParams_3_0,
								"com.karalisoft.Scad.CubeParams");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getCubeAccess().getCommaKeyword_1_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCubeAccess().getCubeParamsCubeParamsParserRuleCall_1_2_1_1_0());
							}
							lv_cubeParams_5_0=ruleCubeParams
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCubeRule());
								}
								add(
									$current,
									"cubeParams",
									lv_cubeParams_5_0,
									"com.karalisoft.Scad.CubeParams");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getCubeAccess().getRightParenthesisKeyword_1_3());
			}
			(
				(';')=>
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getCubeAccess().getSemicolonKeyword_1_4());
				}
			)+
		)
	)
;

// Entry rule entryRuleCubeParams
entryRuleCubeParams returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCubeParamsRule()); }
	iv_ruleCubeParams=ruleCubeParams
	{ $current=$iv_ruleCubeParams.current; }
	EOF;

// Rule CubeParams
ruleCubeParams returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCubeParamsAccess().getCubeParamsAction_0(),
					$current);
			}
		)
		(
			(
				(
					otherlv_1='size'
					{
						newLeafNode(otherlv_1, grammarAccess.getCubeParamsAccess().getSizeKeyword_1_0_0_0());
					}
					otherlv_2='='
					{
						newLeafNode(otherlv_2, grammarAccess.getCubeParamsAccess().getEqualsSignKeyword_1_0_0_1());
					}
				)?
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getCubeParamsAccess().getSizeDoubleParserRuleCall_1_0_1_0_0());
							}
							lv_size_3_0=ruleDouble
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCubeParamsRule());
								}
								set(
									$current,
									"size",
									lv_size_3_0,
									"com.karalisoft.Scad.Double");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						otherlv_4='['
						{
							newLeafNode(otherlv_4, grammarAccess.getCubeParamsAccess().getLeftSquareBracketKeyword_1_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getCubeParamsAccess().getXDoubleParserRuleCall_1_0_1_1_1_0());
								}
								lv_x_5_0=ruleDouble
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getCubeParamsRule());
									}
									set(
										$current,
										"x",
										lv_x_5_0,
										"com.karalisoft.Scad.Double");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_6=','
						{
							newLeafNode(otherlv_6, grammarAccess.getCubeParamsAccess().getCommaKeyword_1_0_1_1_2());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getCubeParamsAccess().getYDoubleParserRuleCall_1_0_1_1_3_0());
								}
								lv_y_7_0=ruleDouble
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getCubeParamsRule());
									}
									set(
										$current,
										"y",
										lv_y_7_0,
										"com.karalisoft.Scad.Double");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_8=','
						{
							newLeafNode(otherlv_8, grammarAccess.getCubeParamsAccess().getCommaKeyword_1_0_1_1_4());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getCubeParamsAccess().getZDoubleParserRuleCall_1_0_1_1_5_0());
								}
								lv_z_9_0=ruleDouble
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getCubeParamsRule());
									}
									set(
										$current,
										"z",
										lv_z_9_0,
										"com.karalisoft.Scad.Double");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_10=']'
						{
							newLeafNode(otherlv_10, grammarAccess.getCubeParamsAccess().getRightSquareBracketKeyword_1_0_1_1_6());
						}
					)
				)
			)
			    |
			(
				(
					otherlv_11='center'
					{
						newLeafNode(otherlv_11, grammarAccess.getCubeParamsAccess().getCenterKeyword_1_1_0_0());
					}
					otherlv_12='='
					{
						newLeafNode(otherlv_12, grammarAccess.getCubeParamsAccess().getEqualsSignKeyword_1_1_0_1());
					}
				)?
				(
					(
						(
							lv_center_13_1='true'
							{
								newLeafNode(lv_center_13_1, grammarAccess.getCubeParamsAccess().getCenterTrueKeyword_1_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getCubeParamsRule());
								}
								setWithLastConsumed($current, "center", lv_center_13_1, null);
							}
							    |
							lv_center_13_2='false'
							{
								newLeafNode(lv_center_13_2, grammarAccess.getCubeParamsAccess().getCenterFalseKeyword_1_1_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getCubeParamsRule());
								}
								setWithLastConsumed($current, "center", lv_center_13_2, null);
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleUnion
entryRuleUnion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionRule()); }
	iv_ruleUnion=ruleUnion
	{ $current=$iv_ruleUnion.current; }
	EOF;

// Rule Union
ruleUnion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnionAccess().getUnionAction_0(),
					$current);
			}
		)
		(
			otherlv_1='union'
			{
				newLeafNode(otherlv_1, grammarAccess.getUnionAccess().getUnionKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getUnionAccess().getLeftParenthesisKeyword_1_1());
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getUnionAccess().getRightParenthesisKeyword_1_2());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getUnionAccess().getLeftCurlyBracketKeyword_1_3());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUnionAccess().getShapesShapeParserRuleCall_1_4_0_0());
						}
						lv_shapes_5_1=ruleShape
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnionRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_1,
								"com.karalisoft.Scad.Shape");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getUnionAccess().getShapesModuleOrFunctionCallParserRuleCall_1_4_0_1());
						}
						lv_shapes_5_2=ruleModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnionRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_2,
								"com.karalisoft.Scad.ModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getUnionAccess().getShapesTransformedModuleOrFunctionCallParserRuleCall_1_4_0_2());
						}
						lv_shapes_5_3=ruleTransformedModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnionRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_3,
								"com.karalisoft.Scad.TransformedModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getUnionAccess().getRightCurlyBracketKeyword_1_5());
			}
			(
				(';')=>
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getUnionAccess().getSemicolonKeyword_1_6());
				}
			)*
		)
	)
;

// Entry rule entryRuleIntersection
entryRuleIntersection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntersectionRule()); }
	iv_ruleIntersection=ruleIntersection
	{ $current=$iv_ruleIntersection.current; }
	EOF;

// Rule Intersection
ruleIntersection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntersectionAccess().getIntersectionAction_0(),
					$current);
			}
		)
		(
			otherlv_1='intersection'
			{
				newLeafNode(otherlv_1, grammarAccess.getIntersectionAccess().getIntersectionKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getIntersectionAccess().getLeftParenthesisKeyword_1_1());
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getIntersectionAccess().getRightParenthesisKeyword_1_2());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getIntersectionAccess().getLeftCurlyBracketKeyword_1_3());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIntersectionAccess().getShapesShapeParserRuleCall_1_4_0_0());
						}
						lv_shapes_5_1=ruleShape
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntersectionRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_1,
								"com.karalisoft.Scad.Shape");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getIntersectionAccess().getShapesModuleOrFunctionCallParserRuleCall_1_4_0_1());
						}
						lv_shapes_5_2=ruleModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntersectionRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_2,
								"com.karalisoft.Scad.ModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getIntersectionAccess().getShapesTransformedModuleOrFunctionCallParserRuleCall_1_4_0_2());
						}
						lv_shapes_5_3=ruleTransformedModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntersectionRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_3,
								"com.karalisoft.Scad.TransformedModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getIntersectionAccess().getRightCurlyBracketKeyword_1_5());
			}
			(
				(';')=>
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getIntersectionAccess().getSemicolonKeyword_1_6());
				}
			)*
		)
	)
;

// Entry rule entryRuleDifference
entryRuleDifference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDifferenceRule()); }
	iv_ruleDifference=ruleDifference
	{ $current=$iv_ruleDifference.current; }
	EOF;

// Rule Difference
ruleDifference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDifferenceAccess().getDifferenceAction_0(),
					$current);
			}
		)
		(
			otherlv_1='difference'
			{
				newLeafNode(otherlv_1, grammarAccess.getDifferenceAccess().getDifferenceKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getDifferenceAccess().getLeftParenthesisKeyword_1_1());
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getDifferenceAccess().getRightParenthesisKeyword_1_2());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getDifferenceAccess().getLeftCurlyBracketKeyword_1_3());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDifferenceAccess().getShapesShapeParserRuleCall_1_4_0_0());
						}
						lv_shapes_5_1=ruleShape
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDifferenceRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_1,
								"com.karalisoft.Scad.Shape");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getDifferenceAccess().getShapesModuleOrFunctionCallParserRuleCall_1_4_0_1());
						}
						lv_shapes_5_2=ruleModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDifferenceRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_2,
								"com.karalisoft.Scad.ModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getDifferenceAccess().getShapesTransformedModuleOrFunctionCallParserRuleCall_1_4_0_2());
						}
						lv_shapes_5_3=ruleTransformedModuleOrFunctionCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDifferenceRule());
							}
							add(
								$current,
								"shapes",
								lv_shapes_5_3,
								"com.karalisoft.Scad.TransformedModuleOrFunctionCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getDifferenceAccess().getRightCurlyBracketKeyword_1_5());
			}
			(
				(';')=>
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getDifferenceAccess().getSemicolonKeyword_1_6());
				}
			)*
		)
	)
;

// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDoubleRule()); }
	iv_ruleDouble=ruleDouble
	{ $current=$iv_ruleDouble.current.getText(); }
	EOF;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDoubleAccess().getPlusSignKeyword_0_0());
			}
			    |
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDoubleAccess().getHyphenMinusKeyword_0_1());
			}
		)?
		(
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_0());
			}
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getDoubleAccess().getFullStopKeyword_1_1_0());
				}
				this_INT_4=RULE_INT
				{
					$current.merge(this_INT_4);
				}
				{
					newLeafNode(this_INT_4, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_1_1());
				}
			)?
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
